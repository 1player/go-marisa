%module marisa

%include <typemaps.i>
%include <stl.i>
%include <std_string.i>


%{
#include "marisa_swig.h"
%}

%include <exception.i>

%exception {
  try {
    $action
  } catch (const marisa::Exception &ex) {
    SWIG_exception(SWIG_RuntimeError, ex.what());
  } catch (...) {
    SWIG_exception(SWIG_UnknownError,"Unknown exception");
  }
}

%rename(Wrapped_Keyset) Keyset;
%rename(Wrapped_Agent) Agent;

%include "marisa_swig.h"

%insert(go_wrapper) %{
    type Agent interface {
        Wrapped_Agent
        SetQueryString(key string)
        SetQueryId(id int64)
    }

    func NewAgent() Agent {
        return _swig_wrap_new_Wrapped_Agent()
    }

    func (a SwigcptrWrapped_Agent) SetQueryString(key string) {
        a.SetQuery__SWIG_0(key, int64(len(key)))
    }

    func (a SwigcptrWrapped_Agent) SetQueryId(id int64) {
        a.SetQuery__SWIG_1(id)
    }  


    type Keyset interface {
        Wrapped_Keyset
        PushString(key string)
        PushStringWithWeight(key string, weight float32)
    }

    func NewKeyset() Keyset {
        return _swig_wrap_new_Wrapped_Keyset()
    }

    func (e SwigcptrWrapped_Keyset) PushString(key string) {
        e.PushBack__SWIG_2(key, int64(len(key)))
    }

    func (e SwigcptrWrapped_Keyset) PushStringWithWeight(key string, weight float32) {
        e.PushBack__SWIG_1(key, int64(len(key)), weight)
    }
%}

